I want you to build a full-stack cricket scoreboard app inside Replit. The app should work for both web and Android (via responsive design or React Native/Expo if possible).

üèóÔ∏è Tech Stack

Backend: Node.js, Express.js, TypeScript, MongoDB (MongoDB Atlas for cloud DB)

Auth: Clerk or JWT-based authentication

Frontend: React (web) + TailwindCSS for a modern UI (white + sky blue + light blue theme, elegant and minimal)

Deployment: Fully runnable inside Replit, with .env for secrets

‚öôÔ∏è Core Features

Authentication & Profile Setup

Users must sign up/login.

After login, they must complete their profile with:

Unique Username (globally unique, indexed in MongoDB)

Role: Batsman / Bowler / All-rounder

Batting Hand: Right / Left

Bowling Style (if Bowler ‚Üí Fast / Medium-Fast / Spin)

Cumulative Career Stats (auto-updated in MongoDB)

Matches Played

Batting: Runs, Balls Faced, Strike Rate

Bowling: Overs Bowled, Runs Conceded, Wickets Taken, Economy

Fielding: Catches Taken

Update Logic:

After each match, increment totals in MongoDB

Recalculate derived metrics:

Strike Rate = (Total Runs √∑ Total Balls) √ó 100

Economy = (Total Runs Conceded √∑ Total Overs)

Match Entry (mandatory fields per player)

Batting: Runs Scored, Balls Faced

Bowling: Overs Bowled, Runs Conceded, Wickets Taken

Fielding: Catches Taken

Must validate completeness before saving

Teams & Invites

Users can create teams (teams collection)

Invite players by username/email

Players can accept/reject invites

Team hierarchy: Captain, Vice-Captain, Members

üé® UI/UX Requirements

Elegant white + sky blue + light blue theme

Dashboard-style navigation

Mobile responsive (usable in Android browser)

Card-style components + modern typography

üì¶ Replit + MongoDB Setup

Initialize Node.js + Express + MongoDB project in Replit

Connect MongoDB Atlas via MONGO_URI in .env

MongoDB Collections:

users ‚Üí profile, auth, career stats

teams ‚Üí team info, members, invites

matches ‚Üí match records, per-player stats

Provide API routes under /api/...

Place frontend in frontend/ folder (React + TailwindCSS)

Run frontend + backend together in Replit